{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst useAxiosFetch = dataUrl => {\n  _s();\n\n  const [data, setData] = useState([]);\n  const [fetchError, setFetchError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n  useEffect(() => {\n    let isMounted = true;\n    const source = axios.CancelToken.source();\n\n    const fetchData = async url => {\n      setIsLoading(true);\n\n      try {\n        const response = await axios.get(url, {\n          cancelToken: source.token\n        });\n\n        if (isMounted) {\n          setData(response.data);\n          setFetchError(null);\n        }\n      } catch (err) {\n        if (isMounted) {\n          setFetchError(err.message);\n          setData([]);\n        }\n      } finally {\n        isMounted && setIsLoading(false);\n      }\n    };\n\n    fetchData(dataUrl);\n\n    const cleanUp = () => {\n      isMounted = false;\n      source.cancel();\n    };\n\n    return cleanUp;\n  }, [dataUrl]);\n  return {\n    data,\n    fetchError,\n    isLoading\n  };\n};\n\n_s(useAxiosFetch, \"+XJtC1F4PrEeMvccO02DD8cTlfg=\");\n\nexport default useAxiosFetch;","map":{"version":3,"names":["useState","useEffect","axios","useAxiosFetch","dataUrl","data","setData","fetchError","setFetchError","isLoading","setIsLoading","isMounted","source","CancelToken","fetchData","url","response","get","cancelToken","token","err","message","cleanUp","cancel"],"sources":["D:/devMaster/reactjs/project/src/hooks/useAxiosFetch.js"],"sourcesContent":["import { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useAxiosFetch = (dataUrl) => {\r\n    const [data, setData] = useState([]);\r\n    const [fetchError, setFetchError] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n        let isMounted = true;\r\n        const source = axios.CancelToken.source();\r\n\r\n        const fetchData = async (url) => {\r\n            setIsLoading(true);\r\n            try {\r\n                const response = await axios.get(url, {\r\n                    cancelToken: source.token\r\n                });\r\n                if (isMounted) {\r\n                    setData(response.data);\r\n                    setFetchError(null);\r\n                }\r\n            } catch (err) {\r\n                if (isMounted) {\r\n                    setFetchError(err.message);\r\n                    setData([]);\r\n                }\r\n            } finally {\r\n                isMounted && setIsLoading(false);\r\n            }\r\n        }\r\n\r\n        fetchData(dataUrl);\r\n\r\n        const cleanUp = () => {\r\n            isMounted = false;\r\n            source.cancel();\r\n        }\r\n\r\n        return cleanUp;\r\n    }, [dataUrl]);\r\n\r\n    return { data, fetchError, isLoading };\r\n}\r\n\r\nexport default useAxiosFetch;"],"mappings":";;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,aAAa,GAAIC,OAAD,IAAa;EAAA;;EAC/B,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;EACA,MAAM,CAACO,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,IAAD,CAA5C;EACA,MAAM,CAACS,SAAD,EAAYC,YAAZ,IAA4BV,QAAQ,CAAC,KAAD,CAA1C;EAEAC,SAAS,CAAC,MAAM;IACZ,IAAIU,SAAS,GAAG,IAAhB;IACA,MAAMC,MAAM,GAAGV,KAAK,CAACW,WAAN,CAAkBD,MAAlB,EAAf;;IAEA,MAAME,SAAS,GAAG,MAAOC,GAAP,IAAe;MAC7BL,YAAY,CAAC,IAAD,CAAZ;;MACA,IAAI;QACA,MAAMM,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAN,CAAUF,GAAV,EAAe;UAClCG,WAAW,EAAEN,MAAM,CAACO;QADc,CAAf,CAAvB;;QAGA,IAAIR,SAAJ,EAAe;UACXL,OAAO,CAACU,QAAQ,CAACX,IAAV,CAAP;UACAG,aAAa,CAAC,IAAD,CAAb;QACH;MACJ,CARD,CAQE,OAAOY,GAAP,EAAY;QACV,IAAIT,SAAJ,EAAe;UACXH,aAAa,CAACY,GAAG,CAACC,OAAL,CAAb;UACAf,OAAO,CAAC,EAAD,CAAP;QACH;MACJ,CAbD,SAaU;QACNK,SAAS,IAAID,YAAY,CAAC,KAAD,CAAzB;MACH;IACJ,CAlBD;;IAoBAI,SAAS,CAACV,OAAD,CAAT;;IAEA,MAAMkB,OAAO,GAAG,MAAM;MAClBX,SAAS,GAAG,KAAZ;MACAC,MAAM,CAACW,MAAP;IACH,CAHD;;IAKA,OAAOD,OAAP;EACH,CAhCQ,EAgCN,CAAClB,OAAD,CAhCM,CAAT;EAkCA,OAAO;IAAEC,IAAF;IAAQE,UAAR;IAAoBE;EAApB,CAAP;AACH,CAxCD;;GAAMN,a;;AA0CN,eAAeA,aAAf"},"metadata":{},"sourceType":"module"}