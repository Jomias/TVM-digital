{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\n\nconst getFormValues = () => {\n  const storedValues = localStorage.getItem('form');\n\n  if (!storedValues) {\n    return {\n      name: \"\",\n      email: \"\",\n      phone: \"\",\n      company: \"\",\n      message: \"\"\n    };\n  }\n\n  return JSON.parse(storedValues);\n};\n\nconst useForm = (callback, validate) => {\n  _s();\n\n  const [values, setValues] = useState(getFormValues());\n  const [errors, setErrors] = useState(validate(getFormValues()));\n  const [countSubmit, setCountSubmit] = useState(0);\n  const [success, setSuccess] = useState(false);\n\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setValues({ ...values,\n      [name]: value\n    });\n  };\n\n  useEffect(() => {\n    setErrors(validate(values));\n  }, [values, validate]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCountSubmit(prev => prev + 1);\n    if (Object.keys(validate(values)) === 0 && countSubmit) if (countSubmit === 0 && Object.keys(validate(values)).length === 0 || Object.keys(errors).length === 0 && countSubmit !== 0) {\n      setSuccess(true);\n    }\n  };\n\n  useEffect(() => {\n    if (success) {\n      callback();\n      setCountSubmit(0);\n      setSuccess(false);\n    }\n  }, [success, callback]);\n  return {\n    handleChange,\n    handleSubmit,\n    values,\n    errors,\n    countSubmit\n  };\n};\n\n_s(useForm, \"t8bFMOk13HL8yf86Sq9iMmQ0pZ8=\");\n\nexport default useForm;","map":{"version":3,"names":["useState","useEffect","getFormValues","storedValues","localStorage","getItem","name","email","phone","company","message","JSON","parse","useForm","callback","validate","values","setValues","errors","setErrors","countSubmit","setCountSubmit","success","setSuccess","handleChange","e","value","target","handleSubmit","preventDefault","prev","Object","keys","length"],"sources":["D:/devMaster/reactjs/project/src/hooks/useForm.js"],"sourcesContent":["\r\nimport { useState, useEffect } from \"react\";\r\n\r\nconst getFormValues = () => {\r\n    const storedValues = localStorage.getItem('form');\r\n    if (!storedValues) {\r\n        return {\r\n            name: \"\",\r\n            email: \"\",\r\n            phone: \"\",\r\n            company: \"\",\r\n            message: \"\"\r\n        }\r\n    }\r\n    return JSON.parse(storedValues);\r\n}\r\n\r\nconst useForm = (callback, validate) => {\r\n    const [values, setValues] = useState(getFormValues());\r\n    const [errors, setErrors] = useState(validate(getFormValues()));\r\n    const [countSubmit, setCountSubmit] = useState(0);\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n        setValues({\r\n            ...values,\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        setErrors(validate(values));\r\n    }, [values, validate]);\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        setCountSubmit(prev => prev + 1);\r\n        if (Object.keys(validate(values)) === 0 && countSubmit)\r\n        if ( (countSubmit === 0 && Object.keys(validate(values)).length === 0) || (Object.keys(errors).length === 0 && countSubmit !== 0)) {\r\n            setSuccess(true);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        if(success) {\r\n            callback();\r\n            setCountSubmit(0);\r\n            setSuccess(false);\r\n        }\r\n    }, [success, callback]);\r\n\r\n    return {\r\n        handleChange,\r\n        handleSubmit,\r\n        values,\r\n        errors,\r\n        countSubmit\r\n    };\r\n};\r\n\r\nexport default useForm;\r\n"],"mappings":";;AACA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AAEA,MAAMC,aAAa,GAAG,MAAM;EACxB,MAAMC,YAAY,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAArB;;EACA,IAAI,CAACF,YAAL,EAAmB;IACf,OAAO;MACHG,IAAI,EAAE,EADH;MAEHC,KAAK,EAAE,EAFJ;MAGHC,KAAK,EAAE,EAHJ;MAIHC,OAAO,EAAE,EAJN;MAKHC,OAAO,EAAE;IALN,CAAP;EAOH;;EACD,OAAOC,IAAI,CAACC,KAAL,CAAWT,YAAX,CAAP;AACH,CAZD;;AAcA,MAAMU,OAAO,GAAG,CAACC,QAAD,EAAWC,QAAX,KAAwB;EAAA;;EACpC,MAAM,CAACC,MAAD,EAASC,SAAT,IAAsBjB,QAAQ,CAACE,aAAa,EAAd,CAApC;EACA,MAAM,CAACgB,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAACe,QAAQ,CAACb,aAAa,EAAd,CAAT,CAApC;EACA,MAAM,CAACkB,WAAD,EAAcC,cAAd,IAAgCrB,QAAQ,CAAC,CAAD,CAA9C;EACA,MAAM,CAACsB,OAAD,EAAUC,UAAV,IAAwBvB,QAAQ,CAAC,KAAD,CAAtC;;EAEA,MAAMwB,YAAY,GAAIC,CAAD,IAAO;IACxB,MAAM;MAAEnB,IAAF;MAAQoB;IAAR,IAAkBD,CAAC,CAACE,MAA1B;IACAV,SAAS,CAAC,EACN,GAAGD,MADG;MAEN,CAACV,IAAD,GAAQoB;IAFF,CAAD,CAAT;EAIH,CAND;;EAQAzB,SAAS,CAAC,MAAM;IACZkB,SAAS,CAACJ,QAAQ,CAACC,MAAD,CAAT,CAAT;EACH,CAFQ,EAEN,CAACA,MAAD,EAASD,QAAT,CAFM,CAAT;;EAIA,MAAMa,YAAY,GAAIH,CAAD,IAAO;IACxBA,CAAC,CAACI,cAAF;IACAR,cAAc,CAACS,IAAI,IAAIA,IAAI,GAAG,CAAhB,CAAd;IACA,IAAIC,MAAM,CAACC,IAAP,CAAYjB,QAAQ,CAACC,MAAD,CAApB,MAAkC,CAAlC,IAAuCI,WAA3C,EACA,IAAMA,WAAW,KAAK,CAAhB,IAAqBW,MAAM,CAACC,IAAP,CAAYjB,QAAQ,CAACC,MAAD,CAApB,EAA8BiB,MAA9B,KAAyC,CAA/D,IAAsEF,MAAM,CAACC,IAAP,CAAYd,MAAZ,EAAoBe,MAApB,KAA+B,CAA/B,IAAoCb,WAAW,KAAK,CAA/H,EAAmI;MAC/HG,UAAU,CAAC,IAAD,CAAV;IACH;EACJ,CAPD;;EASAtB,SAAS,CAAC,MAAM;IACZ,IAAGqB,OAAH,EAAY;MACRR,QAAQ;MACRO,cAAc,CAAC,CAAD,CAAd;MACAE,UAAU,CAAC,KAAD,CAAV;IACH;EACJ,CANQ,EAMN,CAACD,OAAD,EAAUR,QAAV,CANM,CAAT;EAQA,OAAO;IACHU,YADG;IAEHI,YAFG;IAGHZ,MAHG;IAIHE,MAJG;IAKHE;EALG,CAAP;AAOH,CA1CD;;GAAMP,O;;AA4CN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}